!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
AR	Makefile	/^AR=ar rcs $@$/;"	m
Append buffer	README.md	/^##### Append buffer$/;"	T
CC	Makefile	/^CC= clang -O3 -Wpedantic -g -o $@ # Clang has much clearer error messages, so we use it here for/;"	m
CTRL_KEY	include.h	/^#define CTRL_KEY(/;"	d
CTRL_KEY	screened.c	/^#define CTRL_KEY(/;"	d	file:
Compiling	README.md	/^## Compiling$/;"	s
Doing output	README.md	/^### Doing output$/;"	S
FOR DEVELOPERS:	README.md	/^# FOR DEVELOPERS:$/;"	c
FOR USERS:	README.md	/^# FOR USERS:$/;"	c
FORCE	Makefile	/^FORCE :$/;"	t
File inclusion & project management	README.md	/^### File inclusion & project management$/;"	S
Function preferences	README.md	/^### Function preferences$/;"	S
INCLUDE_INCLUDE	include.h	/^#define INCLUDE_INCLUDE$/;"	d
INCLUDE_IOMANIP	iomanip/headers/input.h	/^#define INCLUDE_IOMANIP$/;"	d
INCLUDE_OUTPUT	iomanip/headers/output.h	/^#define INCLUDE_OUTPUT$/;"	d
INCLUDE_SCREENINFO	screenop/headers/screeninfo.h	/^#define INCLUDE_SCREENINFO$/;"	d
INCLUDE_SCREENINFO	screenop/headers/screenmanip.h	/^#define INCLUDE_SCREENINFO$/;"	d
INCLUDE_STROP	dynstr/headers/strop.h	/^#define INCLUDE_STROP$/;"	d
LD	Makefile	/^LD=$(CC)$/;"	m
MAX_BUF_SZ	include.h	/^#define MAX_BUF_SZ /;"	d
OCC	Makefile	/^OCC=$(CC) -c$/;"	m
Operating system	README.md	/^### Operating system$/;"	S
Programming	README.md	/^## Programming$/;"	s
Running `make`	README.md	/^### Running `make`$/;"	S
Terminology	README.md	/^#### Terminology$/;"	t
Thanks to:	README.md	/^# Thanks to:$/;"	c
__anon06a0bc1f0108	include.h	/^typedef struct {$/;"	s
__anon06a0bc1f0208	include.h	/^typedef struct {$/;"	s
abuf	include.h	/^	char *abuf;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:char *
buffers	include.h	/^	fbuf buffers[MAX_BUF_SZ];$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:fbuf[]
check	Makefile	/^check : FORCE$/;"	t
clean	Makefile	/^clean : \/dev\/null$/;"	t
clearscrn	iomanip/output.c	/^void clearscrn(editor_status *estat)$/;"	f	typeref:typename:void
curscol	include.h	/^	short unsigned int curscol;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:short unsigned int
cursorpos	screenop/screenmanip.c	/^void cursorpos(editor_status *estat, short unsigned int cursrow, short unsigned int curscol)$/;"	f	typeref:typename:void
cursrow	include.h	/^	short unsigned int cursrow;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:short unsigned int
disableraw	screenop/screenmanip.c	/^void disableraw(void)$/;"	f	typeref:typename:void
dynstr/objects/strop.o	Makefile	/^dynstr\/objects\/strop.o : dynstr\/strop.c$/;"	t
editor_status	include.h	/^} editor_status;$/;"	t	typeref:struct:__anon06a0bc1f0208
enableraw	screenop/screenmanip.c	/^void enableraw(void)$/;"	f	typeref:typename:void
fbuf	include.h	/^} fbuf;$/;"	t	typeref:struct:__anon06a0bc1f0108
fd	include.h	/^	int fd;$/;"	m	struct:__anon06a0bc1f0108	typeref:typename:int
filename	include.h	/^	char *filename;$/;"	m	struct:__anon06a0bc1f0108	typeref:typename:char *
fillrow	include.h	/^	int fillrow; \/* How may lines are there? *\/$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:int
getkeypress	iomanip/input.c	/^char getkeypress()$/;"	f	typeref:typename:char
getwinsz	screenop/screeninfo.c	/^struct winsize getwinsz(void)$/;"	f	typeref:struct:winsize
init_editor	screened.c	/^void init_editor(void)$/;"	f	typeref:typename:void
insert_mode	screened.c	/^void insert_mode(editor_status *estat)$/;"	f	typeref:typename:void
iomanip/objects/input.o	Makefile	/^iomanip\/objects\/input.o : iomanip\/input.c$/;"	t
iomanip/objects/output.o	Makefile	/^iomanip\/objects\/output.o : iomanip\/output.c$/;"	t
lib/dynstr.a	Makefile	/^lib\/dynstr.a : dynstr\/objects\/strop.o$/;"	t
lib/iomanip.a	Makefile	/^lib\/iomanip.a : iomanip\/objects\/input.o iomanip\/objects\/output.o$/;"	t
lib/screenop.a	Makefile	/^lib\/screenop.a : screenop\/objects\/screenmanip.o screenop\/objects\/screeninfo.o$/;"	t
main	screened.c	/^int main(void)$/;"	f	typeref:typename:int
malloc_failed	dynstr/strop.c	/^static inline void malloc_failed()$/;"	f	typeref:typename:void	file:
mode	include.h	/^	char mode; \/* 1 for normal, 2 for insert *\/$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:char
open_bufs	include.h	/^	int open_bufs;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:int
orig_termios	include.h	/^struct termios orig_termios;$/;"	v	typeref:struct:termios
orig_termios	screened.c	/^struct termios orig_termios; $/;"	v	typeref:struct:termios
output	include.h	/^	bool output;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:bool
pbot	iomanip/output.c	/^void pbot(editor_status *estat, const char *s)$/;"	f	typeref:typename:void
pline	iomanip/output.c	/^void pline(editor_status *estat, int ln, const char *s)$/;"	f	typeref:typename:void
pmid	iomanip/output.c	/^void pmid(editor_status *estat, const char *s)$/;"	f	typeref:typename:void
prockeypress	screened.c	/^int prockeypress(editor_status *estat)$/;"	f	typeref:typename:int
ptop	iomanip/output.c	/^void ptop(editor_status *estat, const char *s)$/;"	f	typeref:typename:void
refreshscrn	iomanip/output.c	/^void refreshscrn(editor_status *estat)$/;"	f	typeref:typename:void
screened	Makefile	/^screened : screened.o lib\/screenop.a lib\/iomanip.a lib\/dynstr.a$/;"	t
screened.o	Makefile	/^screened.o : screened.c$/;"	t
screenop/objects/screeninfo.o	Makefile	/^screenop\/objects\/screeninfo.o : screenop\/screeninfo.c$/;"	t
screenop/objects/screenmanip.o	Makefile	/^screenop\/objects\/screenmanip.o : screenop\/screenmanip.c$/;"	t
str_append	dynstr/strop.c	/^void str_append(char *str, const char *s)$/;"	f	typeref:typename:void
str_create	dynstr/strop.c	/^char *str_create(void)$/;"	f	typeref:typename:char *
str_del	dynstr/strop.c	/^void str_del(char *str)$/;"	f	typeref:typename:void
str_flush	dynstr/strop.c	/^void str_flush(char *str)$/;"	f	typeref:typename:void
str_trunc	dynstr/strop.c	/^void str_trunc(char *str, size_t nsz)$/;"	f	typeref:typename:void
tildes	iomanip/output.c	/^void tildes(editor_status *estat, short unsigned int startrow)$/;"	f	typeref:typename:void
wincols	include.h	/^	short unsigned int wincols;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:short unsigned int
winrows	include.h	/^	short unsigned int winrows;$/;"	m	struct:__anon06a0bc1f0208	typeref:typename:short unsigned int
